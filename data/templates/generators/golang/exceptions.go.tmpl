{{$interface := .Interface}}package {{.PackageName}}

import (
	"github.com/entangle/goentangle"
)
{{if $interface.Exceptions}}
var (
{{range $index, $exc := $interface.ExceptionsSortedByName}}{{if $index}}{{if $exc.Documentation}}
{{end}}{{end}}{{documentation $exc.Documentation 1}}	{{$exc.Name}} = goentangle.NewExceptionDefinition("{{$interface.Name}}", "{{$exc.Name}}")
{{end}})
{{end}}
func parseException(definition, name, description string) goentangle.Exception {
	switch definition {
	case "entangle":
		switch name {
		case "BadMessage":
			return goentangle.BadMessageError.New(description)
		case "InternalServerError":
			return goentangle.InternalServerError.New(description)
		case "UnknownMethod":
			return goentangle.UnknownMethodError.New(description)
		}
{{if $interface.Exceptions}}	case "{{$interface.Name}}":
		switch name {
{{range $interface.Exceptions}}		case "{{.Name}}":
			return {{.Name}}.New(description)
{{end}}		}
{{end}}	}

	return goentangle.UnknownExceptionError.New(description)
}
